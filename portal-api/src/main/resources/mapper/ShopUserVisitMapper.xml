<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.channelsharing.hongqu.portal.api.dao.ShopUserVisitMapper">
	<sql id="shopUserVisitColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.shop_id AS "shopId",
		a.visit_time AS "visitTime",
		a.visit_count AS "visitCount",
		b.nickname,
		b.avatar
	</sql>

	<sql id="shopUserVisitFindWhere">
		<where>
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="userId != null and userId != ''">
				AND a.user_id = #{userId}
			</if>
			<if test="shopId != null and shopId != ''">
				AND a.shop_id = #{shopId}
			</if>
		</where>
	</sql>

	<sql id="shopUserVisitJoins">
		inner join user_info b on a.user_id = b.id
	</sql>

	<select id="findOne"
		resultType="com.channelsharing.hongqu.portal.api.entity.ShopUserVisit">
		SELECT
		<include refid="shopUserVisitColumns" />
		FROM shop_user_visit a
		<include refid="shopUserVisitJoins" />
		<include refid="shopUserVisitFindWhere" />
		ORDER BY a.id DESC
		LIMIT 0, 1
	</select>

	<select id="findList"
		resultType="com.channelsharing.hongqu.portal.api.entity.ShopUserVisit">
		SELECT
		<include refid="shopUserVisitColumns" />
		FROM shop_user_visit a
		<include refid="shopUserVisitJoins" />
		<include refid="shopUserVisitFindWhere" />
		ORDER BY a.visit_time DESC
		LIMIT #{offset}, #{limit}
	</select>

	<select id="findAllCount" resultType="Integer">
		SELECT
		COUNT(a.id)
		FROM shop_user_visit a
		<include refid="shopUserVisitJoins" />
		<include refid="shopUserVisitFindWhere" />
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.channelsharing.hongqu.portal.api.entity.ShopUserVisit">
		INSERT INTO shop_user_visit(
			user_id,
			shop_id,
			visit_time,
			visit_count
		)
		VALUES (
			#{userId},
			#{shopId},
			NOW(),
			1
		)
		ON DUPLICATE KEY UPDATE
			visit_time = NOW(), visit_count = visit_count + 1;
	</insert>

	<update id="update">
		UPDATE shop_user_visit
		<set>
			<if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="shopId != null">
				shop_id = #{shopId},
			</if>
			visit_time = now()
		</set>
		WHERE id = #{id}
	</update>

	<update id="delete">
		DELETE FROM shop_user_visit WHERE id = #{id}
	</update>
</mapper>
